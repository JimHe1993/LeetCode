# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def zigzagLevelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        res = []
        if not root:
            return res
        queue = [[root]]
        while queue:
            level_node = queue.pop(0)
            res.append([node.val for node in level_node])
            temp_node = []
            for node in level_node:
                if node.left:
                    temp_node.append(node.left)
                if node.right:
                    temp_node.append(node.right)
            if temp_node:
                queue.append(temp_node)
        for idx, level in enumerate(res):
            if idx % 2 != 0:
                res[idx] = level[::-1]
        return res
