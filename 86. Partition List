# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def partition(self, head, x):
        """
        :type head: ListNode
        :type x: int
        :rtype: ListNode
        """
        dummy_head = ListNode(-1)
        dummy_head.next = head
        pre = dummy_head
        while pre.next and pre.next.val < x:  # 找到第一个大于或等于x的结点的前驱
            pre = pre.next
        cur = pre
        while cur.next:
            if cur.next.val < x: # 每当有小于x的结点出现，放在第一个大于或等于x的结点的前面
                move_node = cur.next
                cur.next = move_node.next
                move_node.next = pre.next
                pre.next = move_node
                pre = pre.next
            else:
                cur = cur.next
            
        return dummy_head.next
        
