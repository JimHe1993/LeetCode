class Solution:
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        '''
        给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
        不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
        '''
        # 对于有序数组，说明数组中各个不同数字之间的相对位置固定，只需挑出重复数字即可
        # 友情提示：对于非None数组，一定有一个元素是满足题目要求的
        if not nums:
            return 0
        # [0...i] 无重复元素，(i...j) 与前部分有重复的元素
        i = 0
        j = 1
        while j < len(nums):
            if nums[j] != nums[i]:
                if (i + 1) != j:
                    nums[i + 1], nums[j] = nums[j], nums[i + 1]
                i += 1
            j += 1
        return i + 1
