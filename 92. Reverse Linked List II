# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, x):
        self.val = x
        self.next = None


class Solution:
    def reverseBetween(self, head, m, n):
        """
        :type head: ListNode
        :type m: int
        :type n: int
        :rtype: ListNode
        """
        '''
        反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。
        本题要求反转指定范围内的链表元素，那么首先应该记录下范围头尾的结点，以便最后
        完成链表连接，之后在指定范围内进行反转操作
        '''
        dummy_head = ListNode(-1)
        dummy_head.next = head
        cur = dummy_head
        for _ in range(1, m):
            cur = cur.next
        pre = cur
        last = cur.next
        front = None
        for _ in range(m, n + 1):
            cur = pre.next
            pre.next = cur.next
            cur.next = front
            front = cur
        cur = pre.next
        pre.next = front
        last.next = cur
        return dummy_head.next

