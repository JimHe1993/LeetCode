class Solution:
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        '''
        本题求两列表的交集，需要求出共有的元素及其对应元素个数
        需要统计元素频次，一定得想到使用字典
        '''
        if not nums1 or not nums2:
            return []
        dict_nums1 = {}
        for num in nums1:
            if num not in dict_nums1:
                dict_nums1[num] = 1
            else:
                dict_nums1[num] += 1
        res = []
        for num in nums2:
            if num in dict_nums1:
                if dict_nums1[num] > 0:
                    res.append(num)
                    dict_nums1[num] -= 1
        return res
    '''
    如果给定的是有序的数组，那么可以如何优化呢？
    假定数组是升序排列的。由于数组的有序性，可以同时遍历两数组，
    当当前两个索引指向的值相等时，找到了一个交集集合元素，记录下来，
    如果当前两个索引指向的值不相等时，移动相对较小值得索引，
    循环直到遍历完其中一个数组。
    核心代码：
    i = j = 0
    res = []
    while i < len(nums1) and j < len(nums2):
        if nums1[i] == nums2[j]:
            res.append(nums1[i])
            i += 1
            j += 1
        elif nums1[i] < nums2[j]:
            i += 1
        else:
            j += 1
    '''
