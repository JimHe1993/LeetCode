# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def invertTree(self, root):
        """
        :type root: TreeNode
        :rtype: TreeNode
        """
        # if not root:
        #     return None
        # queue = [root]
        # while queue:
        #     node = queue.pop(0)
        #     left = node.left
        #     node.left = node.right
        #     node.right = left
        #     if node.left:
        #         queue.append(node.left)
        #     if node.right:
        #         queue.append(node.right)
        # return root
        
        # 递归——递归调换每个结点的左右结点
        self.__invert(root)
        return root
    
    def __invert(self, node):
        if not node:
            return
        left = node.left
        node.left = node.right
        node.right = left
        self.__invert(node.left)
        self.__invert(node.right)
        
        
        
        
        
        
