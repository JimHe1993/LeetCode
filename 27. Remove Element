class Solution:
    def removeElement(self, nums, val):
        """
        :type nums: List[int]
        :type val: int
        :rtype: int
        """
        '''
        给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。
        不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
        元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。
        '''
        if not nums:
            return 0
        # 解法一：不稳定 [0...i) != val, (j...len(nums)-1] == val, 当i==j时，已经得到正确解
        # i = 0
        # j = len(nums) - 1
        # while i <= j:
        #     while i <= j and nums[i] != val:
        #         i += 1
        #     while i <= j and nums[j] == val:
        #         j -= 1
        #     if i >= j:
        #         break
        #     nums[i], nums[j] = nums[j], nums[i]
        #     i += 1
        #     j -= 1
        # return i

        # 解法二：非值元素相对位置稳定，[0...i) != val, [i...j) == val
        i = 0
        j = 0
        while j < len(nums):
            if nums[j] != val:
                if i != j:
                    nums[i], nums[j] = nums[j], nums[i]
                i += 1
            j += 1
        return i
