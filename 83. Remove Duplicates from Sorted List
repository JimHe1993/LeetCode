# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if not head:
            return head
        # 迭代
        # pre = head
        # while pre.next:
            # if pre.val == pre.next.val:
                # pre.next = pre.next.next
                # del_node = pre.next
                # pre.next = del_node.next
                # del_node.next = None
                # del del_node
            # else:
                # pre = pre.next
        # return head
        
        # 递归
        return self.delete(head)
    
    def delete(self, node):
        if not node.next:
            return node
        temp_node = self.delete(node.next)
        if temp_node.val == node.val:
            return temp_node
        else:
            node.next = temp_node
            return node
